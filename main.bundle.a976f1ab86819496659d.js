!function(e){var t={};function n(o){if(t[o])return t[o].exports;var c=t[o]={i:o,l:!1,exports:{}};return e[o].call(c.exports,c,c.exports,n),c.l=!0,c.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var c in e)n.d(o,c,function(t){return e[t]}.bind(null,c));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}n.r(t);var c=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,c;return t=e,c=[{key:"show",value:function(){var e=document.createElement("div");e.className="wrapper",document.body.appendChild(e);var t=document.createElement("div");t.className="top_search",e.appendChild(t);var n=document.createElement("div");n.className="button",n.id="button",t.appendChild(n);var o=document.createElement("i");o.className="fas fa-search fa-lg",n.appendChild(o);var c=document.createElement("form");c.className="search_input",c.method="get",c.onsubmit=function(){return!1},t.appendChild(c);var a=document.createElement("input");a.className="search_input",a.id="search_input",a.value="Search",a.name="q",a.type="text",a.minlength="3",a.required="",a.onfocus=function(){"Search"===a.value&&(a.value="")},a.onblur=function(){""===a.value&&(a.value="Search")},c.appendChild(a)}}],(n=null)&&o(t.prototype,n),c&&o(t,c),e}();function a(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,o;return t=e,o=[{key:"make",value:function(e,t){return new Promise(function(n,o){var c=new XMLHttpRequest;c.open(e,t),c.onload=function(){200===c.status?n(c.response):o(Error)},c.onerror=function(){o(Error)},c.send()})}}],(n=null)&&a(t.prototype,n),o&&a(t,o),e}();function r(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,o;return t=e,o=[{key:"createSlider",value:function(){var e=document.createElement("div");e.className="slider",e.id="slider",document.body.appendChild(e);var t=document.createElement("div");t.className="left",t.id="left",t.innerText="⇦",e.appendChild(t);var n=document.createElement("div");n.className="right",n.id="right",n.innerText="⇨",e.appendChild(n);for(var o=0;o<4;o+=1){var c=document.createElement("div");c.className="slide",c.id="slide".concat(o),document.getElementById("slider").insertBefore(c,document.getElementById("right"))}}}],(n=null)&&r(t.prototype,n),o&&r(t,o),e}(),d='\n  <div class="cards-container" id="cards-container">\n    <div class="responsive-container">\n      <img class="image" id="image" alt="there should be a picture">\n    </div>\n  <div class="title-card"><a class="title" id="title" href=""></a></div>\n    <div class="description-video">\n      <div class="author-card video">\n        <i class="fas fa-male"></i>\n        <p class="author" id="author"></p>\n      </div>\n      <div class="publication-date video">\n        <i class="far fa-calendar-alt"></i>\n        <p class="publication" id="publication"></p>\n      </div>\n      <div class="view-rate video">\n        <i class="far fa-eye"></i>\n        <p class="count" id="count"></p>\n      </div>\n      <div class="description-card video">\n        <p class="description" id="description"></p>\n      </div>\n    </div>\n  </div>\n';function s(e){if(!document.getElementsByClassName("container-scroll")[0]){var t=document.createElement("div");t.className="container-scroll",document.body.appendChild(t)}for(var n=0;n<15;n+=1){document.getElementsByClassName("container-scroll")[0].insertAdjacentHTML("beforeend",d),document.getElementById("cards-container").id="cards-container".concat(n+15*e),document.getElementById("title").id="title".concat(n+15*e),document.getElementById("description").id="description".concat(n+15*e),document.getElementById("author").id="author".concat(n+15*e),document.getElementById("publication").id="publication".concat(n+15*e),document.getElementById("count").id="count".concat(n+15*e),document.getElementById("image").id="image".concat(n+15*e)}}n(0);var u="AIzaSyAsMvcMCyQZAIvDGWalCXROG6PTesNOHXM",m="rgb(161, 17, 17)",p="#112e86",v=0,f=1,y=0,g=0;function h(e){document.getElementById("slide".concat(+e)).style.backgroundColor=p,document.getElementById("slide".concat(+e)).innerText=f}function E(){var e=window.outerWidth,t=window.outerWidth;(e<751&&f%15==0||e>=751&&e<=1365&&f%8==0||e>1365&&f%4==0)&&function(){g+=1;var e=document.getElementById("search_input").value;if("Search"!==e||""===e){var t=e,n="https://www.googleapis.com/youtube/v3/search?key=".concat(u,"&type=video&part=snippet&maxResults=15&pageToken=").concat(y,"&q=").concat(t);i.make("GET",n).then(function(e){for(var t=JSON.parse(e),n=[],o=t.nextPageToken,c=0;c<15;c+=1)n.push(t.items[c].id.videoId);k(n,g),s(g),y=o})}}(),f+=1,t>=1365&&(document.getElementsByClassName("container-scroll")[0].scrollLeft+=1288),t<1365&&t>750&&(document.getElementsByClassName("container-scroll")[0].scrollLeft+=644),t<=750&&(document.getElementsByClassName("container-scroll")[0].scrollLeft+=322),3!==v?(h(v+=1),document.getElementById("slide".concat(v-1)).style.backgroundColor=m,document.getElementById("slide".concat(v-1)).innerText=""):(h(v=0),document.getElementById("slide".concat(3)).style.backgroundColor=m,document.getElementById("slide".concat(3)).innerText="")}function b(){var e=window.outerWidth;0!==document.getElementsByClassName("container-scroll")[0].scrollLeft&&(f-=1,e>=1365&&(document.getElementsByClassName("container-scroll")[0].scrollLeft-=1288),e<1365&&e>750&&(document.getElementsByClassName("container-scroll")[0].scrollLeft-=644),e<=750&&(document.getElementsByClassName("container-scroll")[0].scrollLeft-=322),0!==v?(h(v-=1),document.getElementById("slide".concat(v+1)).style.backgroundColor=m,document.getElementById("slide".concat(v+1)).innerText=""):(h(v=3),document.getElementById("slide".concat(0)).style.backgroundColor=m,document.getElementById("slide".concat(0)).innerText=""))}var B=0,w=0,C=0,I=0;function N(){document.getElementsByClassName("container-scroll")[0]&&(document.getElementsByClassName("container-scroll")[0].scrollLeft=0),document.getElementById("slider")&&document.getElementById("slider").remove(),l.createSlider(),f=1,h(0);var e=document.getElementsByClassName("container-scroll")[0];e.addEventListener("touchstart",function(e){B=e.screenX,w=e.screenY},!1),e.addEventListener("touchend",function(e){C=e.screenX,I=e.screenY,C<B&&b(),C>B&&E(),I===w&&E()},!1),document.getElementsByClassName("left")[0].addEventListener("click",b),document.getElementsByClassName("right")[0].addEventListener("click",E)}function T(e,t){var n="https://www.googleapis.com/youtube/v3/videos?id=".concat(e,"&key=").concat(u,"&part=snippet,contentDetails,statistics,status");i.make("GET",n).then(function(n){var o=JSON.parse(n),c={};c.id=e,c.number=t,c.countCard=o.items[0].statistics.viewCount,c.imageCard=o.items[0].snippet.thumbnails.medium.url,c.title=o.items[0].snippet.title,c.description=o.items[0].snippet.description.substring(0,100),c.author=o.items[0].snippet.channelTitle,c.date=o.items[0].snippet.publishedAt.substring(0,10),function(e){var t=e.id,n=e.title,o=e.description,c=e.author,a=e.date,i=e.countCard,r=e.imageCard,l=e.number;document.getElementById("title".concat(l)).innerText=n,document.getElementById("title".concat(l)).href="https://www.youtube.com/embed/".concat(t),document.getElementById("description".concat(l)).innerText=o,document.getElementById("author".concat(l)).innerText=c,document.getElementById("publication".concat(l)).innerText=a,document.getElementById("count".concat(l)).innerText=i,document.getElementById("image".concat(l)).src=r,14===l&&N()}(c)})}function k(e,t){for(var n=0;n<15;n+=1)setTimeout(T,500,e[n],n+15*t)}function x(){document.getElementsByClassName("container-scroll")[0]&&document.body.removeChild(document.getElementsByClassName("container-scroll")[0]);var e=document.getElementById("search_input").value;if("Search"!==e||""===e){g=0;var t=e,n="https://www.googleapis.com/youtube/v3/search?key=".concat(u,"&type=video&part=snippet&maxResults=15&pageToken&q=").concat(t);i.make("GET",n).then(function(e){for(var t=JSON.parse(e),n=[],o=t.nextPageToken,c=0;c<15;c+=1)n.push(t.items[c].id.videoId);k(n,0),s(0),y=o})}}function L(e){var t=document.getElementById("search_input").value;13===e.keyCode&&""!==t&&x()}function S(e){var t=e,n=(t=t||window.event).deltaX||t.detail||t.wheelDelta;n>0&&E(),n<0&&b()}window.onload=function(){window.addEventListener("resize",N),c.show(),document.getElementById("button").addEventListener("click",x),document.getElementById("search_input").addEventListener("keydown",L),document.body.addEventListener&&("onwheel"in document?document.body.addEventListener("wheel",S):"onmousewheel"in document?document.body.addEventListener("mousewheel",S):document.body.addEventListener("MozMousePixelScroll",S))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL1NlYXJjaC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvUmVxdWVzdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU2xpZGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9jYXJkLnRlbXBsYXRlLmpzIiwid2VicGFjazovLy8uL3NyYy9nZXRDb3VudENhcmRzLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIlNlYXJjaCIsIndyYXBwZXIiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJ0b3BTZWFyY2giLCJidXR0b25TZWFyY2giLCJpZCIsImljb25TZWFyY2giLCJmb3JtU2VhcmNoIiwibWV0aG9kIiwib25zdWJtaXQiLCJpbnB1dEZvcm0iLCJ0eXBlIiwibWlubGVuZ3RoIiwicmVxdWlyZWQiLCJvbmZvY3VzIiwib25ibHVyIiwiUmVxdWVzdCIsInVybCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJvcGVuIiwib25sb2FkIiwic3RhdHVzIiwicmVzcG9uc2UiLCJFcnJvciIsIm9uZXJyb3IiLCJzZW5kIiwiU2xpZGVyIiwiY29udGFpbmVyU2xpZGUiLCJzbGlkZUxlZnQiLCJpbm5lclRleHQiLCJzbGlkZVJpZ2h0IiwibmV3U2xpZGUiLCJjb25jYXQiLCJnZXRFbGVtZW50QnlJZCIsImluc2VydEJlZm9yZSIsImNhcmRfdGVtcGxhdGUiLCJnZXRDb3VudENhcmRzIiwiZmlyc3ROdW0iLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiY29udGFpbmVyU2Nyb2xsIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwidGVtcGxhdGVDYXJkIiwiYXBpS2V5IiwiQ0xPU0VEX1NMSURFIiwiT1BFTkVEX1NMSURFIiwiY291bnRTbGlkZXIiLCJjb3VudFBhZ2UiLCJuZXh0UGFnZSIsImNvdW50TmV3UGFnZSIsImdldENvbG9yU2xpZGVyIiwiYXJnIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjaGFuZ2VTbGlkZVJpZ2h0IiwiYWxsVmFsdWUiLCJ3aW5kb3ciLCJvdXRlcldpZHRoIiwidyIsInNlYXJjaGluZ1ZhbHVlIiwicSIsIm1ha2UiLCJ0aGVuIiwiZGF0dW1zIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsImFycmF5SWRWaWRlbyIsIm5leHRQYWdlVG9rZW4iLCJwdXNoIiwiaXRlbXMiLCJ2aWRlb0lkIiwiZ2V0QWxsQ2FyZHMiLCJzZWFyY2hGdW5jTmV4dCIsInNjcm9sbExlZnQiLCJjaGFuZ2VTbGlkZUxlZnQiLCJ0b3VjaHN0YXJ0WCIsInRvdWNoc3RhcnRZIiwidG91Y2hlbmRYIiwidG91Y2hlbmRZIiwiY2hhbmdlU2l6ZSIsInJlbW92ZSIsImNyZWF0ZVNsaWRlciIsImdlc3VyZWRab25lIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50Iiwic2NyZWVuWCIsInNjcmVlblkiLCJnZXRJbmZvcm1hdGlvbkNhcmQiLCJudW1iZXIiLCJjYXJkSW5mbyIsImNvdW50Q2FyZCIsInN0YXRpc3RpY3MiLCJ2aWV3Q291bnQiLCJpbWFnZUNhcmQiLCJzbmlwcGV0IiwidGh1bWJuYWlscyIsIm1lZGl1bSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJzdWJzdHJpbmciLCJhdXRob3IiLCJjaGFubmVsVGl0bGUiLCJkYXRlIiwicHVibGlzaGVkQXQiLCJocmVmIiwic3JjIiwiY3JlYXRlQ2FyZHMiLCJhcnJJZFZpZGVvIiwic2V0VGltZW91dCIsInNlYXJjaEZ1bmMiLCJyZW1vdmVDaGlsZCIsImNvbm5lY3RLZXlib2FyZCIsImUiLCJzZWFyY2hpbmdWYWwiLCJrZXlDb2RlIiwib25XaGVlbCIsImRlbHRhIiwiZGVsdGFYIiwiZGV0YWlsIiwid2hlZWxEZWx0YSIsInNob3ciXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEVBQUEsR0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxHQUFBLENBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsUUFBQSxJQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxFQUFBLENBQTBDSyxZQUFBLEVBQUFDLElBQUFMLEtBSzFDWixFQUFBa0IsRUFBQSxTQUFBaEIsR0FDQSxvQkFBQWlCLGVBQUFDLGFBQ0FOLE9BQUFDLGVBQUFiLEVBQUFpQixPQUFBQyxZQUFBLENBQXdEQyxNQUFBLFdBRXhEUCxPQUFBQyxlQUFBYixFQUFBLGNBQWlEbUIsT0FBQSxLQVFqRHJCLEVBQUFzQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBckIsRUFBQXFCLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdB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QUU1SC9DLEVBQVFnRCxLQURPLE1BQ00vQyxHQUNsQmdELEtBQUssU0FBQ0MsR0FJTCxJQUhBLElBQU1DLEVBQU9DLEtBQUtDLE1BQU1ILEdBQ2xCSSxFQUFlLEdBQ2JDLEVBQWtCSixFQUFsQkksY0FDQzNHLEVBQUksRUFBR0EsRUFBSSxHQUFJQSxHQUFLLEVBQzNCMEcsRUFBYUUsS0FBS0wsRUFBS00sTUFBTTdHLEdBQUd5QyxHQUFHcUUsU0FFckNDLEVBQVlMLEVBQWMsR0FDMUI5QixFQUFjLEdBQ2RXLEVBQVdvQixLQUtuQixTQUFTNEMsRUFBZ0JDLEdBQ3ZCLElBQU1DLEVBQWV2SCxTQUFTdUMsZUFBZSxnQkFBZ0J4RCxNQUMzQyxLQUFkdUksRUFBRUUsU0FBbUMsS0FBakJELEdBQ3RCSixJQUlKLFNBQVNNLEVBQVFqRSxHQUNmLElBQUk4RCxFQUFJOUQsRUFFRmtFLEdBRE5KLEVBQUlBLEdBQUt6RCxPQUFPNkIsT0FDQWlDLFFBQVVMLEVBQUVNLFFBQVVOLEVBQUVPLFdBQ3BDSCxFQUFRLEdBQ1YvRCxJQUVFK0QsRUFBUSxHQUNWMUMsSUFJSm5CLE9BQU9uQyxPQUFTLFdBQ2RtQyxPQUFPNEIsaUJBQWlCLFNBQVVKLEdBQ2xDdkYsRUFBT2dJLE9BQ2E5SCxTQUFTdUMsZUFBZSxVQUNoQ2tELGlCQUFpQixRQUFTMEIsR0FDdENuSCxTQUFTdUMsZUFBZSxnQkFBZ0JrRCxpQkFBaUIsVUFBVzRCLEdBQ2hFckgsU0FBU0csS0FBS3NGLG1CQUNaLFlBQWF6RixTQUNmQSxTQUFTRyxLQUFLc0YsaUJBQWlCLFFBQVNnQyxHQUMvQixpQkFBa0J6SCxTQUMzQkEsU0FBU0csS0FBS3NGLGlCQUFpQixhQUFjZ0MsR0FFN0N6SCxTQUFTRyxLQUFLc0YsaUJBQWlCLHNCQUF1QmdDIiwiZmlsZSI6Im1haW4uYnVuZGxlLmE5NzZmMWFiODY4MTk0OTY2NTlkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEpO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VhcmNoIHtcbiAgc3RhdGljIHNob3coKSB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHdyYXBwZXIuY2xhc3NOYW1lID0gJ3dyYXBwZXInO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQod3JhcHBlcik7XG5cbiAgICBjb25zdCB0b3BTZWFyY2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0b3BTZWFyY2guY2xhc3NOYW1lID0gJ3RvcF9zZWFyY2gnO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQodG9wU2VhcmNoKTtcblxuICAgIGNvbnN0IGJ1dHRvblNlYXJjaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGJ1dHRvblNlYXJjaC5jbGFzc05hbWUgPSAnYnV0dG9uJztcbiAgICBidXR0b25TZWFyY2guaWQgPSAnYnV0dG9uJztcbiAgICB0b3BTZWFyY2guYXBwZW5kQ2hpbGQoYnV0dG9uU2VhcmNoKTtcblxuICAgIGNvbnN0IGljb25TZWFyY2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XG4gICAgaWNvblNlYXJjaC5jbGFzc05hbWUgPSAnZmFzIGZhLXNlYXJjaCBmYS1sZyc7XG4gICAgYnV0dG9uU2VhcmNoLmFwcGVuZENoaWxkKGljb25TZWFyY2gpO1xuXG4gICAgY29uc3QgZm9ybVNlYXJjaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICBmb3JtU2VhcmNoLmNsYXNzTmFtZSA9ICdzZWFyY2hfaW5wdXQnO1xuICAgIGZvcm1TZWFyY2gubWV0aG9kID0gJ2dldCc7XG4gICAgZm9ybVNlYXJjaC5vbnN1Ym1pdCA9ICgpID0+IGZhbHNlO1xuICAgIHRvcFNlYXJjaC5hcHBlbmRDaGlsZChmb3JtU2VhcmNoKTtcblxuICAgIGNvbnN0IGlucHV0Rm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgaW5wdXRGb3JtLmNsYXNzTmFtZSA9ICdzZWFyY2hfaW5wdXQnO1xuICAgIGlucHV0Rm9ybS5pZCA9ICdzZWFyY2hfaW5wdXQnO1xuICAgIGlucHV0Rm9ybS52YWx1ZSA9ICdTZWFyY2gnO1xuICAgIGlucHV0Rm9ybS5uYW1lID0gJ3EnO1xuICAgIGlucHV0Rm9ybS50eXBlID0gJ3RleHQnO1xuICAgIGlucHV0Rm9ybS5taW5sZW5ndGggPSAnMyc7XG4gICAgaW5wdXRGb3JtLnJlcXVpcmVkID0gJyc7XG4gICAgaW5wdXRGb3JtLm9uZm9jdXMgPSAoKSA9PiB7XG4gICAgICBpZiAoaW5wdXRGb3JtLnZhbHVlID09PSAnU2VhcmNoJykge1xuICAgICAgICBpbnB1dEZvcm0udmFsdWUgPSAnJztcbiAgICAgIH1cbiAgICB9O1xuICAgIGlucHV0Rm9ybS5vbmJsdXIgPSAoKSA9PiB7XG4gICAgICBpZiAoaW5wdXRGb3JtLnZhbHVlID09PSAnJykge1xuICAgICAgICBpbnB1dEZvcm0udmFsdWUgPSAnU2VhcmNoJztcbiAgICAgIH1cbiAgICB9O1xuICAgIGZvcm1TZWFyY2guYXBwZW5kQ2hpbGQoaW5wdXRGb3JtKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVxdWVzdCB7XG4gIHN0YXRpYyBtYWtlKG1ldGhvZCwgdXJsKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKCgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25zdCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgIHhoci5vcGVuKG1ldGhvZCwgdXJsKTtcbiAgICAgIHhoci5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIGlmICh4aHIuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICByZXNvbHZlKHhoci5yZXNwb25zZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVqZWN0KEVycm9yKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHhoci5vbmVycm9yID0gKCkgPT4ge1xuICAgICAgICByZWplY3QoRXJyb3IpO1xuICAgICAgfTtcbiAgICAgIHhoci5zZW5kKCk7XG4gICAgfSkpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTbGlkZXIge1xuICBzdGF0aWMgY3JlYXRlU2xpZGVyKCkge1xuICAgIGNvbnN0IGNvbnRhaW5lclNsaWRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyU2xpZGUuY2xhc3NOYW1lID0gJ3NsaWRlcic7XG4gICAgY29udGFpbmVyU2xpZGUuaWQgPSAnc2xpZGVyJztcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lclNsaWRlKTtcbiAgICBjb25zdCBzbGlkZUxlZnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzbGlkZUxlZnQuY2xhc3NOYW1lID0gJ2xlZnQnO1xuICAgIHNsaWRlTGVmdC5pZCA9ICdsZWZ0JztcbiAgICBzbGlkZUxlZnQuaW5uZXJUZXh0ID0gJ+KHpic7XG4gICAgY29udGFpbmVyU2xpZGUuYXBwZW5kQ2hpbGQoc2xpZGVMZWZ0KTtcbiAgICBjb25zdCBzbGlkZVJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2xpZGVSaWdodC5jbGFzc05hbWUgPSAncmlnaHQnO1xuICAgIHNsaWRlUmlnaHQuaWQgPSAncmlnaHQnO1xuICAgIHNsaWRlUmlnaHQuaW5uZXJUZXh0ID0gJ+KHqCc7XG4gICAgY29udGFpbmVyU2xpZGUuYXBwZW5kQ2hpbGQoc2xpZGVSaWdodCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpICs9IDEpIHtcbiAgICAgIGNvbnN0IG5ld1NsaWRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBuZXdTbGlkZS5jbGFzc05hbWUgPSAnc2xpZGUnO1xuICAgICAgbmV3U2xpZGUuaWQgPSBgc2xpZGUke2l9YDtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzbGlkZXInKS5pbnNlcnRCZWZvcmUobmV3U2xpZGUsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyaWdodCcpKTtcbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGBcbiAgPGRpdiBjbGFzcz1cImNhcmRzLWNvbnRhaW5lclwiIGlkPVwiY2FyZHMtY29udGFpbmVyXCI+XG4gICAgPGRpdiBjbGFzcz1cInJlc3BvbnNpdmUtY29udGFpbmVyXCI+XG4gICAgICA8aW1nIGNsYXNzPVwiaW1hZ2VcIiBpZD1cImltYWdlXCIgYWx0PVwidGhlcmUgc2hvdWxkIGJlIGEgcGljdHVyZVwiPlxuICAgIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwidGl0bGUtY2FyZFwiPjxhIGNsYXNzPVwidGl0bGVcIiBpZD1cInRpdGxlXCIgaHJlZj1cIlwiPjwvYT48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZGVzY3JpcHRpb24tdmlkZW9cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJhdXRob3ItY2FyZCB2aWRlb1wiPlxuICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1tYWxlXCI+PC9pPlxuICAgICAgICA8cCBjbGFzcz1cImF1dGhvclwiIGlkPVwiYXV0aG9yXCI+PC9wPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwicHVibGljYXRpb24tZGF0ZSB2aWRlb1wiPlxuICAgICAgICA8aSBjbGFzcz1cImZhciBmYS1jYWxlbmRhci1hbHRcIj48L2k+XG4gICAgICAgIDxwIGNsYXNzPVwicHVibGljYXRpb25cIiBpZD1cInB1YmxpY2F0aW9uXCI+PC9wPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwidmlldy1yYXRlIHZpZGVvXCI+XG4gICAgICAgIDxpIGNsYXNzPVwiZmFyIGZhLWV5ZVwiPjwvaT5cbiAgICAgICAgPHAgY2xhc3M9XCJjb3VudFwiIGlkPVwiY291bnRcIj48L3A+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJkZXNjcmlwdGlvbi1jYXJkIHZpZGVvXCI+XG4gICAgICAgIDxwIGNsYXNzPVwiZGVzY3JpcHRpb25cIiBpZD1cImRlc2NyaXB0aW9uXCI+PC9wPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuYDtcbiIsImltcG9ydCB0ZW1wbGF0ZUNhcmQgZnJvbSAnLi9jYXJkLnRlbXBsYXRlJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q291bnRDYXJkcyhmaXJzdE51bSkge1xuICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRhaW5lci1zY3JvbGwnKVswXSkge1xuICAgIGNvbnN0IGNvbnRhaW5lclNjcm9sbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRhaW5lclNjcm9sbC5jbGFzc05hbWUgPSAnY29udGFpbmVyLXNjcm9sbCc7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXJTY3JvbGwpO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTU7IGkgKz0gMSkge1xuICAgIGNvbnN0IGNhcmRNYWluRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRhaW5lci1zY3JvbGwnKVswXTtcbiAgICBjYXJkTWFpbkVsZW1lbnQuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCB0ZW1wbGF0ZUNhcmQpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYXJkcy1jb250YWluZXInKS5pZCA9IGBjYXJkcy1jb250YWluZXIke2kgKyAoMTUgKiBmaXJzdE51bSl9YDtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGl0bGUnKS5pZCA9IGB0aXRsZSR7aSArICgxNSAqIGZpcnN0TnVtKX1gO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZXNjcmlwdGlvbicpLmlkID0gYGRlc2NyaXB0aW9uJHtpICsgKDE1ICogZmlyc3ROdW0pfWA7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2F1dGhvcicpLmlkID0gYGF1dGhvciR7aSArICgxNSAqIGZpcnN0TnVtKX1gO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwdWJsaWNhdGlvbicpLmlkID0gYHB1YmxpY2F0aW9uJHtpICsgKDE1ICogZmlyc3ROdW0pfWA7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvdW50JykuaWQgPSBgY291bnQke2kgKyAoMTUgKiBmaXJzdE51bSl9YDtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1hZ2UnKS5pZCA9IGBpbWFnZSR7aSArICgxNSAqIGZpcnN0TnVtKX1gO1xuICB9XG59XG4iLCJpbXBvcnQgU2VhcmNoIGZyb20gJy4vU2VhcmNoJztcbmltcG9ydCBSZXF1ZXN0IGZyb20gJy4vUmVxdWVzdCc7XG5pbXBvcnQgU2xpZGVyIGZyb20gJy4vU2xpZGVyJztcbmltcG9ydCBnZXRDb3VudENhcmRzIGZyb20gJy4vZ2V0Q291bnRDYXJkcyc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcblxuY29uc3QgYXBpS2V5ID0gJ0FJemFTeUFzTXZjTUN5UVpBSXZER1dhbENYUk9HNlBUZXNOT0hYTSc7XG5cbmNvbnN0IENMT1NFRF9TTElERSA9ICdyZ2IoMTYxLCAxNywgMTcpJztcbmNvbnN0IE9QRU5FRF9TTElERSA9ICcjMTEyZTg2JztcblxubGV0IGNvdW50U2xpZGVyID0gMDtcbmxldCBjb3VudFBhZ2UgPSAxO1xuXG5sZXQgbmV4dFBhZ2UgPSAwO1xubGV0IGNvdW50TmV3UGFnZSA9IDA7XG5cbmZ1bmN0aW9uIGdldENvbG9yU2xpZGVyKGFyZykge1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2xpZGUkeythcmd9YCkuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gT1BFTkVEX1NMSURFO1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2xpZGUkeythcmd9YCkuaW5uZXJUZXh0ID0gY291bnRQYWdlO1xufVxuXG5mdW5jdGlvbiBjaGFuZ2VTbGlkZVJpZ2h0KCkge1xuICBjb25zdCBhbGxWYWx1ZSA9IHdpbmRvdy5vdXRlcldpZHRoO1xuICBjb25zdCB3ID0gd2luZG93Lm91dGVyV2lkdGg7XG4gIGlmICgoYWxsVmFsdWUgPCA3NTEgJiYgKGNvdW50UGFnZSAlIDE1ID09PSAwKSkgfHwgKChhbGxWYWx1ZSA+PSA3NTEgJiYgYWxsVmFsdWUgPD0gMTM2NSlcbiAgICAmJiAoY291bnRQYWdlICUgOCA9PT0gMCkpIHx8IChhbGxWYWx1ZSA+IDEzNjUgJiYgKGNvdW50UGFnZSAlIDQgPT09IDApKSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2UtYmVmb3JlLWRlZmluZVxuICAgIHNlYXJjaEZ1bmNOZXh0KCk7XG4gIH1cbiAgY291bnRQYWdlICs9IDE7XG4gIGlmICh3ID49IDEzNjUpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjb250YWluZXItc2Nyb2xsJylbMF0uc2Nyb2xsTGVmdCArPSAxMjg4O1xuICB9XG4gIGlmICh3IDwgMTM2NSAmJiB3ID4gNzUwKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udGFpbmVyLXNjcm9sbCcpWzBdLnNjcm9sbExlZnQgKz0gNjQ0O1xuICB9XG4gIGlmICh3IDw9IDc1MCkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRhaW5lci1zY3JvbGwnKVswXS5zY3JvbGxMZWZ0ICs9IDMyMjtcbiAgfVxuXG4gIGlmIChjb3VudFNsaWRlciAhPT0gMykge1xuICAgIGNvdW50U2xpZGVyICs9IDE7XG4gICAgZ2V0Q29sb3JTbGlkZXIoY291bnRTbGlkZXIpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzbGlkZSR7Y291bnRTbGlkZXIgLSAxfWApLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IENMT1NFRF9TTElERTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2xpZGUke2NvdW50U2xpZGVyIC0gMX1gKS5pbm5lclRleHQgPSAnJztcbiAgfSBlbHNlIHtcbiAgICBjb3VudFNsaWRlciA9IDA7XG4gICAgZ2V0Q29sb3JTbGlkZXIoY291bnRTbGlkZXIpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzbGlkZSR7M31gKS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBDTE9TRURfU0xJREU7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHNsaWRlJHszfWApLmlubmVyVGV4dCA9ICcnO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoYW5nZVNsaWRlTGVmdCgpIHtcbiAgY29uc3QgdyA9IHdpbmRvdy5vdXRlcldpZHRoO1xuICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udGFpbmVyLXNjcm9sbCcpWzBdLnNjcm9sbExlZnQgIT09IDApIHtcbiAgICBjb3VudFBhZ2UgLT0gMTtcbiAgICBpZiAodyA+PSAxMzY1KSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjb250YWluZXItc2Nyb2xsJylbMF0uc2Nyb2xsTGVmdCAtPSAxMjg4O1xuICAgIH1cbiAgICBpZiAodyA8IDEzNjUgJiYgdyA+IDc1MCkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udGFpbmVyLXNjcm9sbCcpWzBdLnNjcm9sbExlZnQgLT0gNjQ0O1xuICAgIH1cbiAgICBpZiAodyA8PSA3NTApIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRhaW5lci1zY3JvbGwnKVswXS5zY3JvbGxMZWZ0IC09IDMyMjtcbiAgICB9XG5cbiAgICBpZiAoY291bnRTbGlkZXIgIT09IDApIHtcbiAgICAgIGNvdW50U2xpZGVyIC09IDE7XG4gICAgICBnZXRDb2xvclNsaWRlcihjb3VudFNsaWRlcik7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2xpZGUke2NvdW50U2xpZGVyICsgMX1gKS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBDTE9TRURfU0xJREU7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2xpZGUke2NvdW50U2xpZGVyICsgMX1gKS5pbm5lclRleHQgPSAnJztcbiAgICB9IGVsc2Uge1xuICAgICAgY291bnRTbGlkZXIgPSAzO1xuICAgICAgZ2V0Q29sb3JTbGlkZXIoY291bnRTbGlkZXIpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHNsaWRlJHswfWApLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IENMT1NFRF9TTElERTtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzbGlkZSR7MH1gKS5pbm5lclRleHQgPSAnJztcbiAgICB9XG4gIH1cbn1cblxubGV0IHRvdWNoc3RhcnRYID0gMDtcbmxldCB0b3VjaHN0YXJ0WSA9IDA7XG5sZXQgdG91Y2hlbmRYID0gMDtcbmxldCB0b3VjaGVuZFkgPSAwO1xuXG5mdW5jdGlvbiBoYW5kbGVHZXN1cmUoKSB7XG4gIGlmICh0b3VjaGVuZFggPCB0b3VjaHN0YXJ0WCkge1xuICAgIGNoYW5nZVNsaWRlTGVmdCgpO1xuICB9XG4gIGlmICh0b3VjaGVuZFggPiB0b3VjaHN0YXJ0WCkge1xuICAgIGNoYW5nZVNsaWRlUmlnaHQoKTtcbiAgfVxuICBpZiAodG91Y2hlbmRZID09PSB0b3VjaHN0YXJ0WSkge1xuICAgIGNoYW5nZVNsaWRlUmlnaHQoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGFuZ2VTaXplKCkge1xuICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udGFpbmVyLXNjcm9sbCcpWzBdKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udGFpbmVyLXNjcm9sbCcpWzBdLnNjcm9sbExlZnQgPSAwO1xuICB9XG5cbiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzbGlkZXInKSkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzbGlkZXInKS5yZW1vdmUoKTtcbiAgfVxuICBTbGlkZXIuY3JlYXRlU2xpZGVyKCk7XG4gIGNvdW50UGFnZSA9IDE7XG4gIGdldENvbG9yU2xpZGVyKDApO1xuXG4gIGNvbnN0IGdlc3VyZWRab25lID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udGFpbmVyLXNjcm9sbCcpWzBdO1xuXG4gIGdlc3VyZWRab25lLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCAoZXZlbnQpID0+IHtcbiAgICB0b3VjaHN0YXJ0WCA9IGV2ZW50LnNjcmVlblg7XG4gICAgdG91Y2hzdGFydFkgPSBldmVudC5zY3JlZW5ZO1xuICB9LCBmYWxzZSk7XG5cbiAgZ2VzdXJlZFpvbmUuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCAoZXZlbnQpID0+IHtcbiAgICB0b3VjaGVuZFggPSBldmVudC5zY3JlZW5YO1xuICAgIHRvdWNoZW5kWSA9IGV2ZW50LnNjcmVlblk7XG4gICAgaGFuZGxlR2VzdXJlKCk7XG4gIH0sIGZhbHNlKTtcblxuICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdsZWZ0JylbMF0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjaGFuZ2VTbGlkZUxlZnQpO1xuICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdyaWdodCcpWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2hhbmdlU2xpZGVSaWdodCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNhcmRzKGNhcmRJbmZvKSB7XG4gIGNvbnN0IHtcbiAgICBpZCxcbiAgICB0aXRsZSxcbiAgICBkZXNjcmlwdGlvbixcbiAgICBhdXRob3IsXG4gICAgZGF0ZSxcbiAgICBjb3VudENhcmQsXG4gICAgaW1hZ2VDYXJkLFxuICAgIG51bWJlcixcbiAgfSA9IGNhcmRJbmZvO1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgdGl0bGUke251bWJlcn1gKS5pbm5lclRleHQgPSB0aXRsZTtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHRpdGxlJHtudW1iZXJ9YCkuaHJlZiA9IGBodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8ke2lkfWA7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBkZXNjcmlwdGlvbiR7bnVtYmVyfWApLmlubmVyVGV4dCA9IGRlc2NyaXB0aW9uO1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgYXV0aG9yJHtudW1iZXJ9YCkuaW5uZXJUZXh0ID0gYXV0aG9yO1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgcHVibGljYXRpb24ke251bWJlcn1gKS5pbm5lclRleHQgPSBkYXRlO1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgY291bnQke251bWJlcn1gKS5pbm5lclRleHQgPSBjb3VudENhcmQ7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBpbWFnZSR7bnVtYmVyfWApLnNyYyA9IGltYWdlQ2FyZDtcbiAgaWYgKG51bWJlciA9PT0gMTQpIHtcbiAgICBjaGFuZ2VTaXplKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0SW5mb3JtYXRpb25DYXJkKGlkLCBudW1iZXIpIHtcbiAgY29uc3QgdXJsID0gYGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3lvdXR1YmUvdjMvdmlkZW9zP2lkPSR7aWR9JmtleT0ke2FwaUtleX0mcGFydD1zbmlwcGV0LGNvbnRlbnREZXRhaWxzLHN0YXRpc3RpY3Msc3RhdHVzYDtcbiAgY29uc3QgbWV0aG9kID0gJ0dFVCc7XG4gIFJlcXVlc3QubWFrZShtZXRob2QsIHVybClcbiAgICAudGhlbigoZGF0dW1zKSA9PiB7XG4gICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShkYXR1bXMpO1xuICAgICAgY29uc3QgY2FyZEluZm8gPSB7fTtcbiAgICAgIGNhcmRJbmZvLmlkID0gaWQ7XG4gICAgICBjYXJkSW5mby5udW1iZXIgPSBudW1iZXI7XG4gICAgICBjYXJkSW5mby5jb3VudENhcmQgPSBkYXRhLml0ZW1zWzBdLnN0YXRpc3RpY3Mudmlld0NvdW50O1xuICAgICAgY2FyZEluZm8uaW1hZ2VDYXJkID0gZGF0YS5pdGVtc1swXS5zbmlwcGV0LnRodW1ibmFpbHMubWVkaXVtLnVybDtcbiAgICAgIGNhcmRJbmZvLnRpdGxlID0gZGF0YS5pdGVtc1swXS5zbmlwcGV0LnRpdGxlO1xuICAgICAgY2FyZEluZm8uZGVzY3JpcHRpb24gPSBkYXRhLml0ZW1zWzBdLnNuaXBwZXQuZGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsIDEwMCk7XG4gICAgICBjYXJkSW5mby5hdXRob3IgPSBkYXRhLml0ZW1zWzBdLnNuaXBwZXQuY2hhbm5lbFRpdGxlO1xuICAgICAgY2FyZEluZm8uZGF0ZSA9IGRhdGEuaXRlbXNbMF0uc25pcHBldC5wdWJsaXNoZWRBdC5zdWJzdHJpbmcoMCwgMTApO1xuICAgICAgY3JlYXRlQ2FyZHMoY2FyZEluZm8pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRBbGxDYXJkcyhhcnJJZFZpZGVvLCBmaXJzdE51bSkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDE1OyBpICs9IDEpIHtcbiAgICBzZXRUaW1lb3V0KGdldEluZm9ybWF0aW9uQ2FyZCwgNTAwLCBhcnJJZFZpZGVvW2ldLCBpICsgKDE1ICogZmlyc3ROdW0pKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZWFyY2hGdW5jTmV4dCgpIHtcbiAgY291bnROZXdQYWdlICs9IDE7XG4gIGNvbnN0IHNlYXJjaGluZ1ZhbHVlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaF9pbnB1dCcpLnZhbHVlO1xuICBpZiAoc2VhcmNoaW5nVmFsdWUgIT09ICdTZWFyY2gnIHx8IHNlYXJjaGluZ1ZhbHVlID09PSAnJykge1xuICAgIGNvbnN0IHEgPSBzZWFyY2hpbmdWYWx1ZTtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/a2V5PSR7YXBpS2V5fSZ0eXBlPXZpZGVvJnBhcnQ9c25pcHBldCZtYXhSZXN1bHRzPTE1JnBhZ2VUb2tlbj0ke25leHRQYWdlfSZxPSR7cX1gO1xuICAgIGNvbnN0IG1ldGhvZCA9ICdHRVQnO1xuICAgIFJlcXVlc3QubWFrZShtZXRob2QsIHVybClcbiAgICAgIC50aGVuKChkYXR1bXMpID0+IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZGF0dW1zKTtcbiAgICAgICAgY29uc3QgYXJyYXlJZFZpZGVvID0gW107XG4gICAgICAgIGNvbnN0IHsgbmV4dFBhZ2VUb2tlbiB9ID0gZGF0YTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNTsgaSArPSAxKSB7XG4gICAgICAgICAgYXJyYXlJZFZpZGVvLnB1c2goZGF0YS5pdGVtc1tpXS5pZC52aWRlb0lkKTtcbiAgICAgICAgfVxuICAgICAgICBnZXRBbGxDYXJkcyhhcnJheUlkVmlkZW8sIGNvdW50TmV3UGFnZSk7XG4gICAgICAgIGdldENvdW50Q2FyZHMoY291bnROZXdQYWdlKTtcbiAgICAgICAgbmV4dFBhZ2UgPSBuZXh0UGFnZVRva2VuO1xuICAgICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2VhcmNoRnVuYygpIHtcbiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRhaW5lci1zY3JvbGwnKVswXSkge1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29udGFpbmVyLXNjcm9sbCcpWzBdKTtcbiAgfVxuICBjb25zdCBzZWFyY2hpbmdWYWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2hfaW5wdXQnKS52YWx1ZTtcbiAgaWYgKHNlYXJjaGluZ1ZhbHVlICE9PSAnU2VhcmNoJyB8fCBzZWFyY2hpbmdWYWx1ZSA9PT0gJycpIHtcbiAgICBjb3VudE5ld1BhZ2UgPSAwO1xuICAgIGNvbnN0IHEgPSBzZWFyY2hpbmdWYWx1ZTtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20veW91dHViZS92My9zZWFyY2g/a2V5PSR7YXBpS2V5fSZ0eXBlPXZpZGVvJnBhcnQ9c25pcHBldCZtYXhSZXN1bHRzPTE1JnBhZ2VUb2tlbiZxPSR7cX1gO1xuICAgIGNvbnN0IG1ldGhvZCA9ICdHRVQnO1xuICAgIFJlcXVlc3QubWFrZShtZXRob2QsIHVybClcbiAgICAgIC50aGVuKChkYXR1bXMpID0+IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZGF0dW1zKTtcbiAgICAgICAgY29uc3QgYXJyYXlJZFZpZGVvID0gW107XG4gICAgICAgIGNvbnN0IHsgbmV4dFBhZ2VUb2tlbiB9ID0gZGF0YTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNTsgaSArPSAxKSB7XG4gICAgICAgICAgYXJyYXlJZFZpZGVvLnB1c2goZGF0YS5pdGVtc1tpXS5pZC52aWRlb0lkKTtcbiAgICAgICAgfVxuICAgICAgICBnZXRBbGxDYXJkcyhhcnJheUlkVmlkZW8sIDApO1xuICAgICAgICBnZXRDb3VudENhcmRzKDApO1xuICAgICAgICBuZXh0UGFnZSA9IG5leHRQYWdlVG9rZW47XG4gICAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb25uZWN0S2V5Ym9hcmQoZSkge1xuICBjb25zdCBzZWFyY2hpbmdWYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VhcmNoX2lucHV0JykudmFsdWU7XG4gIGlmIChlLmtleUNvZGUgPT09IDEzICYmIHNlYXJjaGluZ1ZhbCAhPT0gJycpIHtcbiAgICBzZWFyY2hGdW5jKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gb25XaGVlbChhcmcpIHtcbiAgbGV0IGUgPSBhcmc7XG4gIGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcbiAgY29uc3QgZGVsdGEgPSBlLmRlbHRhWCB8fCBlLmRldGFpbCB8fCBlLndoZWVsRGVsdGE7XG4gIGlmIChkZWx0YSA+IDApIHtcbiAgICBjaGFuZ2VTbGlkZVJpZ2h0KCk7XG4gIH1cbiAgaWYgKGRlbHRhIDwgMCkge1xuICAgIGNoYW5nZVNsaWRlTGVmdCgpO1xuICB9XG59XG5cbndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBjaGFuZ2VTaXplKTtcbiAgU2VhcmNoLnNob3coKTtcbiAgY29uc3QgYnV0dG9uUHJlc3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV0dG9uJyk7XG4gIGJ1dHRvblByZXNzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2VhcmNoRnVuYyk7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2hfaW5wdXQnKS5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgY29ubmVjdEtleWJvYXJkKTtcbiAgaWYgKGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgIGlmICgnb253aGVlbCcgaW4gZG9jdW1lbnQpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignd2hlZWwnLCBvbldoZWVsKTtcbiAgICB9IGVsc2UgaWYgKCdvbm1vdXNld2hlZWwnIGluIGRvY3VtZW50KSB7XG4gICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNld2hlZWwnLCBvbldoZWVsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdNb3pNb3VzZVBpeGVsU2Nyb2xsJywgb25XaGVlbCk7XG4gICAgfVxuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==